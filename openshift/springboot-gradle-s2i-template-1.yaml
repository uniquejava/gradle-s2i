apiVersion: v1
kind: Template
labels:
  application: springboot-gradle-s2i
metadata:
  annotations:
    description: Sample Spring Boot Application built with gradle
    iconClass: icon-spring
    tags: instant-app,springboot,gradle,java
  name: springboot-gradle-s2i
objects:
  - apiVersion: v1
    kind: BuildConfig
    metadata:
      name: ${APPLICATION_NAME}
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
      source:
        contextDir: ${CONTEXT_DIR}
        sourceSecret:
          name: ${SOURCE_SECRET}
        git:
          ref: ${GIT_REF}
          uri: ${GIT_URI}
        type: Git
      strategy:
        sourceStrategy:
          env:
            - name: BUILDER
              value: ${BUILDER}
            - name: SCRIPT_DEBUG
              value: ${BUILDER_DEBUG}
          from:
            kind: ImageStreamTag
            name: gradle-s2i:latest
            namespace: ${IMAGE_STREAM_NAMESPACE}
        type: Source
      triggers:
        - github:
            secret: ${GITHUB_TRIGGER_SECRET}
          type: GitHub
        - generic:
            secret: ${GENERIC_TRIGGER_SECRET}
          type: Generic
        - imageChange: {}
          type: ImageChange
  - apiVersion: v1
    kind: ImageStream
    metadata:
      name: ${APPLICATION_NAME}
    spec:
      tags:
        - name: latest
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: ${APPLICATION_NAME}
    spec:
      replicas: 1
      selector:
        deploymentconfig: ${APPLICATION_NAME}
      strategy:
        type: Rolling
      template:
        metadata:
          labels:
            deploymentconfig: ${APPLICATION_NAME}
        spec:
          containers:
            - image: ${APPLICATION_NAME}
              imagePullPolicy: IfNotPresent
              livenessProbe:
                initialDelaySeconds: 30
                tcpSocket:
                  port: 8080
                timeoutSeconds: 1
              name: ${APPLICATION_NAME}
              ports:
                - containerPort: 8080
                  protocol: TCP
          dnsPolicy: ClusterFirst
          restartPolicy: Always
      triggers:
        - type: ConfigChange
        - imageChangeParams:
            automatic: true
            containerNames:
              - ${APPLICATION_NAME}
            from:
              kind: ImageStreamTag
              name: ${APPLICATION_NAME}:latest
          type: ImageChange
  - apiVersion: v1
    kind: Route
    metadata:
      name: ${APPLICATION_NAME}
    spec:
      host: ${APPLICATION_HOSTNAME}
      to:
        kind: Service
        name: ${APPLICATION_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      name: ${APPLICATION_NAME}
    spec:
      ports:
        - name: ${APPLICATION_NAME}-http
          port: 8080
          targetPort: 8080
      selector:
        deploymentconfig: ${APPLICATION_NAME}
      sessionAffinity: None
      type: ClusterIP
parameters:
  - description: The name for the application.
    displayName: Application name
    name: APPLICATION_NAME
    required: true
    value: helloworld-gradle
  - name: BUILDER_DEBUG
    description: set to 'true' for debugging builder S2I scripts
  - name: BUILDER
    description: Builder can be 'Gradle' or 'Maven', default is autodetect by checking of existance of pom.xml or build.gradle
  - description: Custom hostname for service routes. Leave blank for autogenerated hostname
    displayName: Application hostname
    name: APPLICATION_HOSTNAME
  - description: Git source URI for application
    name: GIT_URI
    value: https://github.com/spring-guides/gs-spring-boot
  - description: Git branch/tag reference
    name: GIT_REF
    value: master
  - description: Git Directory
    name: CONTEXT_DIR
    value: complete
  - description: Source Secret
    name: SOURCE_SECRET
  - description: Github trigger secret
    from: "[a-zA-Z0-9]{8}"
    generate: expression
    name: GITHUB_TRIGGER_SECRET
  - description: Generic build trigger secret
    from: "[a-zA-Z0-9]{8}"
    generate: expression
    name: GENERIC_TRIGGER_SECRET
  - name: IMAGE_STREAM_NAMESPACE
    required: true
    value: openshift
